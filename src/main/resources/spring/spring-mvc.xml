<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context-4.0.xsd
                            http://www.springframework.org/schema/mvc
                            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!--<context:annotation-config/>-->
    <!--<context:component-scan base-package="com.lww.design.graduation.controller">-->
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
        <!--<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>-->
    <!--</context:component-scan>-->

    <!-- 对静态资源的访问 -->
    <mvc:resources mapping="/AmazeUI-2.4.2/**" location="WEB-INF/AmazeUI-2.4.2/" />
    <mvc:resources mapping="/js/**" location="WEB-INF/js/" />
    <mvc:resources mapping="/fonts/**" location="WEB-INF/fonts/" />
    <mvc:resources mapping="/css/**" location="WEB-INF/css/" />
    <mvc:resources mapping="/img/**" location="WEB-INF/img/" />
    <mvc:resources mapping="/html/**" location="WEB-INF/html/" />

    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.lww.design.graduation">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
    </context:component-scan>
    <!-- 添加注解驱动 -->
    <mvc:annotation-driven enable-matrix-variables="true" />
    <!-- 允许对静态资源文件的访问 -->

    <mvc:default-servlet-handler />
    <bean id="utf8Charset" class="java.nio.charset.Charset" factory-method="forName">
        <constructor-arg value="UTF-8"/>
    </bean>

    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json</value>
                        <value>application/xml;charset=UTF-8</value>
                    </list>
                </property>
                <!--<property name="features">-->
                    <!--<list>-->
                        <!--&lt;!&ndash; 默认的意思就是不配置这个属性，配置了就不是默认了 &ndash;&gt;-->
                        <!--&lt;!&ndash; 是否输出值为null的字段 ，默认是false&ndash;&gt;-->

                        <!--<value>WriteMapNullValue</value>-->

                        <!--<value>WriteNullNumberAsZero</value>-->
                        <!--<value>WriteNullListAsEmpty</value>-->
                        <!--<value>WriteNullStringAsEmpty</value>-->
                        <!--<value>WriteNullBooleanAsFalse</value>-->
                        <!--<value>WriteDateUseDateFormat</value>-->

                    <!--</list>-->
                <!--</property>-->
            </bean>

        </mvc:message-converters>
        <!--<mvc:message-converters>-->
            <!---->
            <!--<bean class="org.springframework.http.converter.StringHttpMessageConverter">-->
                <!--<constructor-arg ref="utf8Charset"/>-->
            <!--</bean>-->
            <!--避免IE执行AJAX时,返回JSON出现下载文件 需要添加fastjson依赖，所以放弃（麻烦）-->
            <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
                <!--<property name="supportedMediaTypes" value="application/json;charset=UTF-8"/>-->
            <!--</bean>-->
        <!--</mvc:message-converters>-->
    </mvc:annotation-driven>
    <!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
    <bean  class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="order" value="0" />
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!--<bean id="htmlviewResolver"-->
          <!--class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<property name="order" value="1" />-->
        <!--<property name="prefix" value="/WEB-INF/"/>-->
        <!--<property name="suffix" value=".html" />-->
        <!--<property name="contentType" value="text/html;charset=UTF-8"></property>-->
    <!--</bean>-->

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <!-- 10485760 B -> 10240 KB  -> 10 MB-->
        <property name="maxUploadSize" value="10485760"/>
        <property name="maxUploadSizePerFile" value="10485760"/>
    </bean>

</beans>